{"pages":[{"title":"About Photivo","text":"Photivo is a free and open source (GPL3) photo processor. It handles your RAW files as well as your bitmap files (TIFF, JPEG, BMP, PNG and many more) in a non-destructive 16 bit processing pipe with batch mode. Photivo tries to provide the best algorithms available, even if this implies some redundancy. Due to a steep learning curve it is not aimed at beginners. A quite strong computer is recommended as well. I restarted Photivo recently as it seemed abandonned. Kudos though to the original authors that brought it to this level : Mike <mike (at) photivo.org> Brother John <brother.john (at) photivo.org> Much of the current info is import from the original site and might be outdated to some degree. I try to indicate by having older dates on those pages.","tags":"pages","url":"pages/AboutPhotivo.html"},{"title":"CMake","text":"Sergey 'salsergey' made also a cmake based environment available, which probably is less funky, more portable and more convenient than the python + qmake approach. It has the same prerequisites, particularly with respect to 16 bit GraphicsMagick than the 'standard' build. To build with cmake , do something along following lines : $ mkdir Build $ cd Build $ cmake .. $ make -f Makefile For a MSYS2 (mingw64) environment that would become : $ mkdir Build $ cd Build $ cmake -G \"MSYS Makefiles\" .. $ make -f Makefile In both cases, the executable and all needed subdirectories become available under Build .","tags":"Download","url":"pages/Download/CMake.html"},{"title":"\"Camera\" Processing Tab","text":"Input Camera color space Generic Corrections White Balance The White Balance tools calibrates the image's colours, the white balance. We aim to adjust all colours in a way to make white/grey parts of the images really appear in white/grey and that there is no colour cast in the image. Usually the camera itselfs tries to find the right white balance when taking the picture. At least in natural daylight conditions results are quite useable. In the top combobox we select pre-defined presets. What is available here depends on the camera model. Also Photivo needs to know that particular camera have presets for it. Otherwise we need to take care of the white balance ourselfs. The following entries are always present: Camera keeps the white balance the camera chose when taking the picture. With Automatic Photivo tries to determine the white balance automatically, though the results are usually not that useable. Spot is a semi-automatic mode. After choosing Spot we select a part of the image that should contain only grey colours. This can actually be a single pixel but also an arbitrary section of the image. Photivo uses the selected section as a reference to do the white balancing. We might need to experiment some to find a suitable reference spot. Manual is the fully manual mode where we control the white balance completely on our own. Whatever combobox entry we select, we can always adjust all values with the controls below. Photivo then automatically returns to manual mode. Demosaicing Highlight recovery","tags":"Tabs","url":"pages/Manual/Tabs/Camera.html"},{"title":"Dehaze","text":"This tutorial shows how to deal with haze that plagues a lot of scenery photos. Dehazing relies on much of the same techniques as Fake HDR , since essentially the core of both is enhancing subtle detail. Also hazy photos tend to benefit from some fake-HDR enhancing as well. The general steps involved are: Use the whole histogram range, apply local contrast filters to enhance the subtle details remaining in the haze (this is the major task), probably denoise because we're likely to be pushing the image hard with the brightness and contrast steps. Finally of course we apply all the eyecandy, sharpening, scaling, etc. we want for the final look. That's not really part of dehazing anymore, though. Our example image is a typical shot of the Inca town of Machu Picchu in hazy conditions. The left image is the Jpeg straight from the camera. Especially note the lack of detail on the mountain range in the background. The back light situation (the sun is just to the left of the image) also doesn't exactly improve things. On the right we see the final result. The mountain range and sky both gained a tremendous amount of detail. The same is true for the dark parts of the mountain peaks in the foreground. Now, how to dehaze? First we need to understand that there is no single definite way. Some hazy images might turn out great with the exact settings from this tutorial. Others need a slightly different treatment. However, the basic steps are always the same. Just play with the settings and filters a bit until you reach a satisfying result. When we open up the RAW image in Photivo with no active filters, it looks like this: Brighten Our first task is to make use of as much of the histogram range as possible to prepare for the following enhancing of every possible contrast. A great filter to achieve this is Brighten (Reinhard tonemapping ) on the RGB tab. Brightness controls the overall strength of the brighten effect, Light is useful for fine tuning the brightening, and Chrominance affects how warm or cold colours come out. For our example image Brighten with -30/1/0 settings works well. As we can see, the histogram is now spread a lot more nicely over the whole range. However, Brighten is not always the best choice. Especially for already quite bright images with haze all over the foreground and background Brighten tends to be too strong even at low settings. Then a simple Expose adjustment or brightening Basecurve ( Output tab) can be the better alternative. We'll just have to try what works best. Dynamic Range Compression and Contrast Enhancement The core part of dehazing happens on the Lab Color/Contrast tab. The first filter we need is Dynamic Range Compression , usually with Amount around 0.5 to 0.6. Bias controls the brightness and with Color Adaption we can counteract colour shifts introduced by the compression. Here is what the filter does: There's two things to notice in comparison to the brighten step: The clouds, background mountain range and foreground mountain peaks gain a good bit of detail. The ruins in the foreground look awful, a lot worse than before. However, this is exactly the input we need for the subsequent contrast filters. With those it's time to experiment again, since what looks good here depends a lot on the actual image. As a general guideline: First try the halo based Local Contrast Stretch , start with high values for Opacity and Masking and play with those two sliders until artefacts disappear. Texture contrast is a useful addition or even an alternative to the local contrast stretch filter. Texture Contrast I is pre-set to enhance small detail, Texture Contrast II works on a larger scale. In the example I decided on a Texture curve (that also works on small details) to selectively push the details in the ruins. Most likely we need some additional global contrast as well, so let's have a look at the Output tab. The most common way to push contrast here is to use the rather strong sRGB gamma compensation . However, for our example a more subtle approach with Sigmoidal contrast and 4.8/0.28 settings was the better solution. With all of these filters we finally have a properly dehazed image. It's not perfect yet. The colours are still too flat and the sky on the left appears too blown out. But solving those issues is not part of the dehazing. Since dehazing tends to push the image data close to the limit, some denoising and sharpening is probably required almost always. The rest is – again – playing around. Eyecandy and Final Touches What to do to finish the process depends on the artistic choice of how we want the final image to look. On the two Eyecandy tabs I decided to use a soft Vignette for more pleasing picture corners and two Gradual overlays to darken the top left part of the image and to enhance the warm orange colours of the ruins in the foreground. Some sharpening and scaling to the final resolution complete the image. That concludes our dehazing tutorial. I'm sure you have some pictures lying around your want to try this on!","tags":"Tutorials","url":"pages/Manual/Tutorials/Dehaze.html"},{"title":"Development","text":"Photivo already uses many algorithms from other open source projects. We don't need to invent the wheel again . However it still takes time to port and modify them so that they fit properly. When new tools are added, the old tools stay (you may e.g. hide them) to leave the old settings files working. Probably the easiest way to get involved with Photivo development is contributing a translation (because it requires no programming). Read the translation page for more information. Plans Here are some of my plans, not ordered by priority. Update: As there are less open points now, I have to admit there are many more plans already, just nobody offers time to maintain this list… Internal Portable settings Blocked tools should become editable (implemented in the new-style ptToolBox) UI decoupling Translation for all strings Optimize bilateral UI status presets Default settings file Rework batch interface Processing Impulse noise reduction (by Emil Martinec) Equalizer (by Emil Martinec) 1:1 crop mode Full manual Lensfun Algorithm Updates DCB AMaZE CA correction Tutorials Basic editing Basic UI Local contrast: stones Black & white conversion","tags":"pages","url":"pages/Development.html"},{"title":"Download","text":"The activity on Photivo has recently restarted and there are not yet many downloads available. Windows For 64 bit Windows, an installer is available. Linux Sergey 'salsergey' made available a number of Photivo packages for several Linux distributions : openSUSE, Fedora, Ubuntu, Arch. The packages and installation instructions can be found here . Big thanks ! Please let us know if these packages work for you. Build If you want to experiment with the newest versions, you will need to build it from sources. Grab the code from the Bitbucket repository I will try to support 2 build environments : Windows 10 , 64 bit , MSYS2 based. XUbuntu 16.04 LTS , which is a LTS ('long term support') Debian Linux variant that should be a good starting point for many others. For Mac I am looking for a contributor who can tune my stuff such it works also for Mac. I have barely knowledge about. The compiler shall be gcc . Available for all of above. At the heart, the build system will be qmake based. However, the so called pro files will be generated by a custom Python script ptConfigure.py that can be tweaked for different environments using configuration files for each environment and that are stored in BuildConfs . That script will generate the necessary makefiles and custom scripts to make an installation. Sergey 'salsergey' prepared also a CMake environment that seems to be fully operational by now (2018-03-20). Currently, I have it running for Windows 10, MSYS2, as follows. Missing packages must be installed into MSYS2 according to the MSYS2 Wiki . Note you first need to have a Q64 GraphicsMagick. See Compile GraphicsMagick . $ ./ptConfigure.py BuildConfs/Msys2_64.py $ make -j 4 -f Makefile_ptPhotivo_MSYS2_64 $ ./ptWinInstaller_MSYS2_64.py As a result you should find a complete distribution in the Build/MSYS2_64/bin directory and an installer at the root. You can install it or run from the said Build/MSYS2_64/bin directory. The XUbuntu 16.04 LTS variant is not too different : $ python3 ptConfigure.py BuildConfs/Ubuntu_16_04.py $ make -j 4 -f Makefile_ptPhotivo_Ubuntu_16_04 $ python3 ptWinInstaller_Ubuntu_16_04.py As a result you should find a complete distribution in the Build/Ubuntu_16_04/bin directory and a tgz at the root. You can unpack the tgz somewhere and run it or run from the said Build/Ubuntu_16_04/bin directory. Compile GraphicsMagick GraphicsMagick must be compiled specifically for 16 bit depth. Standard distributions - including msys2 - do have it with 8 bit depth. For MSYS2, mingw64 variant : $ ./configure --prefix = /mingw64 --with-quantum-depth = 16 --enable-shared $ make $ make install For XUbuntu 16.04 : $ ./configure --prefix = --with-quantum-depth = 16 --enable-shared $ make $ sudo make install","tags":"pages","url":"pages/Download.html"},{"title":"\"Eyecandy\" Processing Tab","text":"Black and White The Black and White tool is the most versatile filter available to convert images from colour to greyscale. Opacity controls how much colour is removed. 0,0 means the tool is disabled, 1,0 removes all colour and produces a pure greyscale image. The large Mode combobox sets the type of b/w conversion Photivo uses. The modes are modelled after analogue b/w films. But don't trust them too much. Just try what looks best for your image. The smaller Colour Filter combobox emulates colour filters. The different colour option works just like the appropriately coloured filter you would put in front of your camera's lens. The Red , Green and Blue sliders represent the three RGB channels. They configure the Channelmixer only and have no effect on all other modes. Simple Tone Tone This filter can be used to tone (or duo tone since there are two instances) the image. Internally a layer with the chosen color is put over the current image. For fine tuning you can set a luminance mask to control the intensity. Cross processing Contrast Gradual overlay Vignette Gradual blur The Gradual blur is a filter for imitating blur effects you usually get with special lenses. Please keep in mind, it is only a fake effect. You will not get an identical result as with the actual lens. The main strength of the filter's effect is controlled by Radius , i.e. the pixel radius of the blur. Higher values blur more strongly and 0 disables the filter altogether. The Mode combobox sets the general shape for the blur and allows to preview the mask used for the blur. For best effects control the mask to not quite reach pure white with the Lowel Level and Upper Level sliders. Linear gives a one-directional blur which is controlled by Angle . The controls work like those for the gradual overlay. Two horizontal linear blurs (one rotated 180 degrees) may create a toy effect (also called \"miniature faking\") . The Round mode uses a radial blur, its general shape controlled by Shape . It works similar to the Vignette filter, Lower level and Upper level correspond to the respective radius. A Shape of 1 gives you a rectangle with hard edges, 2 is a circle, 3 and above rectangles with rounded corners. Roundness squashes the shape vertically (positive values) or horizontally (negative values). That means, if you want a real circular blur use a Shape of 2 and a Roundness of 0 . With the Center X and Center Y sliders you move the center of the blur. The default ( 0.00 for both) represents the image's center. The Round blur may also simulate the blur towards the image borders of older high aperture lenses which are usually soft outside the center. This filter gets extremely slow with increasing image size. Softglow / Orton Color Intensity Tone curves","tags":"Tabs","url":"pages/Manual/Tabs/EyeCandy.html"},{"title":"Fake HDR","text":"Discussion about this tutorial on Flickr . Please don't be shy, if you have comments or questions. This is a short run through of how to get an HDR look from a single exposure. The tab previews are enabled by the small button next to the pipe size on the lower left. Of course, the quality you get from such a workflow cannot compete with a real HDR made of several exposures, but there may be situations where you just have forgotten your tripod or where moving parts don't allow a tripod. This stresses the image data quite a bit, so if you have a noisy camera you may get into troubles earlier. This is the image after slight cropping. Make sure you have no clipped highlights but try to expose to the right. My sample here may be a bit to dark, but let's see… Basic exposure on RGB tab. In this case done with the tone mapping algorithm Reinhard 05 which is behind Brighten . The goal is to use the whole range of the histogram. This is more or less where the magic happens. Dynamic range compression (also tone mapping, Fattal et al.) gets the values in a useable range and increases local contrast. A little texture increase in the warm tones and halo based local contrast with a larger radius to prevent small scale halos while increasing contrast further. Since we pulled up the shadows quite a bit, there is some noise. Here I filter only the color noise since the luminance noise is not so severe. A little halo based highpass sharpen for the details. The contrast filters above work only on the L* channel so the saturation is untouched and this results in weak colors. Therefore all colors get more saturated now. The green tones get more saturation to get a color contrast to the red sky. A little vignette for more drama. This is now just colors stuff, I also toned the image which didn't fit in the screenshot. This is more or less all try and error till you get your desired result. I chose the weaker sigmoidal contrast here, to compensate for the sRGB gamma, instead of a base curve or the real compensation. Downscaling and a little sharpening.","tags":"Tutorials","url":"pages/Manual/Tutorials/FakeHdr.html"},{"title":"Features","text":"Features 16-bit internal processing, color managed with LCMS2. Gimp workflow integration (import and export) Works with RAWs and Bitmaps (8 bit bitmaps are transformed and processed with 16 bit, which usually gives better results). CA correction, Green equilibration, line denoise, badpixel reduction, wavelet denoise, median filters on RAW data. Perspective correction (tilt and turn), distorsion and geometry (also defish) correction Demosaicing: Bilinear, VNG, VNG4, PPG, AHD, DCB, mod. AHD, VCD, LMMSE, AMaZE (needs work!). RGB, R, G, B, L*, a*, b*, Texture, Detail, Denoise, Hue, Saturation, L* by Hue, Base curve. Tonemapping (Reinhard 05 (RGB Brighten), Fattal et al. (Dynamic range compress)). Several local contrast filters (HiRaLoAm (Local contrast), texture contrast, local contrast stretch). Sharpen (Edge avoiding wavlets, USM, Highpass, Inverse diffusion, Wiener filter, Gradient sharpen). Denoise, seperately on Luminance and Color (Edge avoiding wavelets, GreyCStoration, Wavelet, Masked bilateral, Pyramid) and via a hue or luminance sensitive denoise curve. Adaptive saturation. Film grain simulation. Black and white conversion. (Split) Toning. Cross processing. Gradual overlay (like Cokin(R) GND filters). Vignetting. Softglow / Orton. Texture overlay (external texture) Fake tilt/shift, toy effect Batch mode Translations: Dutch, French, German, Italian and Russian. There are quite some possibilities, the best is to try them and to see what the personal preferences are","tags":"AboutPhotivo","url":"pages/AboutPhotivo/Features.html"},{"title":"\"Geometry\" Processing Tab","text":"Lensfun Lensfun is a set of filters dealing with errors and distortions introduced by imperfect lenses – and no lens is perfect. Lensfun is used to correct lateral/transversal chromatic aberration , correct vignetting , correct geometric distortions like barrel, pincushion or mustache distortion, convert between lens geometries, e.g. from fisheye to normal rectilinear. In Photivo the whole of Lensfun is split up into four processing tools and one configuration tool that affects all the others. All have Lensfun in their caption. Lens Parameters The Lens Parameters (Lensfun) tool contains the global Lensfun configuration. The values you set here affect all the other tools simultaneously. Focal length (35mm equiv.) represents the focal length the image was taken with, if necessary converted to its 35mm film equivalent. So if you took the picture with a 14mm lens and your camera has a crop factor of 1.5 – which is very common for digital SLR cameras – the correct value for the Focal length field is 14 × 1.5 = 21mm. Photivo tries to set this value automatically from the image's Exif data. This automatic currently does not work for (most?) Canon cameras because of the weird way they store crop factor information in the image. Aperture is the aperture (f-stop) the image was shot with. Photivo sets this value automatically if it is present in the image's Exif data. Distance is the distance to the subject of the image. The Lensfun documentation is not very specific about this value. I assume it is the distance between the camera and the main subject of the image in meters. However it does not seem to have a major influence on the results. Scale is used to adjust the image scale. After a distortion correction and/or geometry conversion the dimensions of the input might not be the same as the pipe size dimensions. Scale lets you adjust how much of the corrected image you lose. See the following figure for an illustration of what happens. On the left you see the the input image. On the right is the output after applying Lensfun distortion correction and/or geometry conversion. The red rectangle represents the pipe size. The correction/conversion is likely to produce an output image that is larger or smaller than the pipe size dimensions. In our example it is larger (green box). Since Photivo treats the pipe size dimensions as the definite image boundaries, everything outside the red box gets chopped off. This is where the Scale slider comes in. It changes the size of the green box. Effectively it lets you control how much of the corrected/converted output image actually appears inside the pipe size boundaries and therefore is visible and usable by the filters further down the processing pipe. Output images smaller than the pipe size (green box smaller than red box) do not change that logic. The unused pipe size area is just filled with black. If the Auto scale checkbox is active, Lensfun tries to set the scale factor in such a way as to fit as much image area as possible into the pipe size box without creating black borders. Chromatic Aberration The Chromatic Aberration (Lensfun) tool corrects lateral/transversal chromatic aberration . CA correction depends on the focal length value from the Lens Parameters tool. Model sets the mathematical model used to correct CAs. None means CA correction is disabled. Each model has a set of parameters. Those appear as sliders below the combo box and adjust according to the model you choose. The values represent parameters in a (set of) mathematical equations and don't really have an easily explained individual meaning for the output. Just play around with the values until you are satisfied with the result. Vignetting The Vignetting (Lensfun) tool corrects vignetting . Vignetting correction depends on the focal length, aperture and distance values from the Lens Parameters tool. Model sets the mathematical model used to correct vignetting. None means the correction is disabled. Each model has a set of parameters. Those appear as sliders below the combo box and adjust according to the model you choose. The values represent parameters in a (set of) mathematical equations and don't really have an easily explained individual meaning for the output. Just play around with the values until you are satisfied with the result. Lens Distortion The Lens Distortion (Lensfun) tool corrects geometric distortion like barrel, pincushion or mustache distortion. Distortion correction depends on the focal length value from the Lens Parameters tool. Model sets the mathematical model used to correct distortions. None means the correction is disabled. Each model has a set of parameters. Those appear as sliders below the combo box and adjust according to the model you choose. The values represent parameters in a (set of) mathematical equations and don't really have an easily explained individual meaning for the output. Just play around with the values until you are satisfied with the result. Geometry Conversion The Geometry Conversion (Lensfun) tool converts between different lens geometries. Its main purpose is to straighten the bended lines produced by a fisheye lens . Like the distortion correction geometry conversion depends on the focal length value from the Lens Parameters tool. Source geometry is the geometry of the lens the picture was taken with. Target geometry is the lens geometry you want to convert to. If source and target are the same, Photivo skips the tool when processing the pipe, i.e. no conversion takes place. Unknown stands for an unknown or just not specified lens geometry. If either source or target is Unknown , Photivo skips the tool and no conversion is performed. Rectilinear stands for the normal type of lens that keeps straight lines (like a building corner) straight in the image but may distort angles. Usually this is the geometry you want your final result to have. Fisheye lenses bend straight lines into curves. Generally, the shorter the focal length, the stronger the bending effect. Panoramic stands for special lenses used in panoramic photography . Equirectangular represents the equirectangular projection . No such lenses exist, but using them as source or target might give interesting effects. Defish Defish is a specialised version of the Lensfun geometry conversion. It is used to \"defish\" images taken with a fisheye lens , i.e. straighten the bent fisheye lines which results in an image with normal rectilinear geometry. Defish is completely separate from the other Lensfun tools. Particularly it is not affected by the values set in Lens Parameters (Lensfun) . Enable activates or deactivates the Defish tool. Focal length (35mm equiv.) represents the focal length the image was taken with, if necessary converted to its 35mm film equivalent. So if you took the picture with a 14mm lens and your camera has a crop factor of 1.5 – which is very common for digital SLR cameras – the correct value for the Focal length field is 14 × 1.5 = 21mm. Photivo tries to set this value automatically from the image's Exif data. This automatic currently does not work for (most?) Canon cameras because of the weird way they store crop factor information in the image. Scale is used to adjust the image scale. After a distortion correction or geometry conversion parts of the corrected/converted image might lie outside the bounding box defined by the pipe size. Everything outside that box gets chopped off. Scale lets you adjust how much of the corrected image you lose. If the value is 0.0 or the Auto scale checkbox is active, Lensfun tries to set the scale factor in such a way as to fit as much image area as possible into the bounding box without creating black borders. Rotation and Perspective With the Rotation and Perspective tool you rotate the image or tilt and turn (perspective correction) it. Crop The Crop tool crops out rectangular regions from the source image. The Crop checkbox enables and disables the current crop. If no previously selected crop region is available, Photivo automatically enters cropping mode. This mode is also activated by the Make a crop button to the right of the checkbox. Enabling Aspect Ratio restricts the shape of the cropped image region to a certain aspect ratio. You can set this ratio with the W (width) and H (height) comboboxes. The Guidelines combobox below displays common guiding lines used for image composition; for example the \"rule of thirds\" lines or image diagonals. Making a crop: When entering crop mode all filters are disabled and the image is zoomed so that it completely fits into the viewport. The Make a crop button is replaced by the Confirm crop and Abort crop buttons. You can change the inital zoom behaviour in the Crop tab on the Settings page. If you did not crop the current image before, the initial crop rectangle contains the full image (if permitted by the aspect ratio setting). Otherwise crop mode starts with the previous crop rectangle. Adjust the rectangle's size and position with the mouse. When you move your mouse over different parts of the rectangle the mouse cursor changes according to the action that is possible there. Drag the corners with the left mouse button to change the size of both adjacent edges simultaneously. Drag the edges to change only the width or height of the rectangle. Drag the center to move the rectangle around without changing its size. Crop works on all zoom levels. If the image is too large to fit into the viewport completely and you want to drag it to make another part of the image visible, hold down the Ctrl key. Pressing the Alt key cycles through \"LightsOut\" modes. Changing the LightsOut combo box does the same. There are three modes: None just displays the rectangle (and guidelines) on top of the image. Dimmed additionally dims the image outside the rectangle. Black completely blacks out areas outside the rectangle and also does not show the rectangle borders or guidelines. That way you have an distraction-free preview of your current crop. You can also change the guidelines or aspect ratio restriction at any point during cropping. When you are satisfied with your crop selection, click the Confirm crop button or press Enter or double click inside the crop rectangle. Click the Abort crop button or hit Esc to cancel the crop. Photivo will return to the previous crop (if there is one) or the uncropped image. Seam carving Seam carving allows you to rescale and change the aspect ratio of your image while preserving important image features and avoiding distorted proportions as would happen with normal non-proportional rescaling. The Wikipedia article on seam carving gives a good explanation. Photivo uses Liquid Rescale for seam carving. The tool lets you choose the type of energy evaluation function and of course the amount of rescaling. Energy evaluation functions are different methods to search for rescaling seams in the image. Directional grad brightness : absolute value of the brightness gradient in the direction of the rescaling Average grad brightness : sum of absolute values of the brightness gradients in both directions Norm brightness : norm of the brightness gradient Directional grad luminance : absolute value of the luminance gradient in the direction of the rescaling Average grad luminance : sum of absolute values of the luminance gradients in both directions Norm luminance : norm of the luminance gradient It is hard to predict which function produces the best results for a particular image, so just play around with them till you like the result. Scaling sets the scaling mode. With Relative you choose a percentage based on the current image size. With Absolute you specify the target width and height in pixels. The Vertical first checkbox controls which dimension is rescaled first. Usually Photivo rescales horizontally first, then vertically. Enable Vertical first to revert this order. Liquid rescale is a quite slow filter and might produce vastly different results for different pipe sizes. Resize The Resize tool changes the image's size. Resizing is always proportional, i.e. the aspect ratio stays the same. Check the Resize checkbox to enable resizing. With Size you set the output size in pixels of the longer image dimension. I.e. Size sets the output width for images with landscape orientation (wider than high) and the output height for images with portrait orientation (higher than wide). The Filter combobox lets you choose the resize algorithm. Resizing is done through GraphicsMagick and all of GraphicsMagick's filters are available. It is probably safe to stay with Mitchell or Lanczos3 . Automatic pipe size automatically matches pipe size and output resolution to avoid unnecessarily large pipe sizes and save processing time. It uses the smallest possible pipe size that is still larger than the specified output size of the resize tool. Flip The Flip tool allows you to flip your image either along the horzontal or the vertical axis. Block When the Block pipe checkbox is enabled, all the tabs from RGB to EyeCandy will not be processed, i.e. only Camera , Geometry and Output stay active. This tool is mostly there as a convenient way to temporarily disable a heavy processing pipe when you want to adjust settings on the early tabs.","tags":"Tabs","url":"pages/Manual/Tabs/Geometry.html"},{"title":"Sync with external","text":"Some parts of Photivo are relying on external source. I moved them as much as possible into the External directory. The challenge might be to keep in sync with the remote source (that is using e.g. git) while keeping the local changes needed for Photivo. Following StackOverflow describes the process rather clear. Sources impacted this way External/x3f (git source : https://github.com/Kalpanika/x3f.git) External/rawspeed (git source : https://github.com/darktable-org/rawspeed.git) Way of working I understand that you want your local copies to \"override\" what's in the remote, but, oh, man, if someone has modified the files in the remote repo in some different way, and you just ignore their changes and try to \"force\" your own changes without even looking at possible conflicts, well, I weep for you (and your coworkers) ;-) That said, though, it's really easy to do the \"right thing...\" Step 1: git stash in your local repo. That will save away your local updates into the stash, then revert your modified files back to their pre-edit state. Step 2: git pull to get any modified versions. Now, hopefully, that won't get any new versions of the files you're worried about. If it doesn't, then the next step will work smoothly. If it does, then you've got some work to do, and you'll be glad you did. Step 3: git stash pop That will merge your modified versions that you stashed away in Step 1 with the versions you just pulled in Step 2. If everything goes smoothly, then you'll be all set! If, on the other hand, there were real conflicts between what you pulled in Step 2 and your modifications (due to someone else editing in the interim), you'll find out and be told to resolve them. Do it. Things will work out much better this way - it will probably keep your changes without any real work on your part, while alerting you to serious, serious issues.","tags":"Development","url":"pages/Development/GitAndKeepLocal.html"},{"title":"Infrared","text":"Discussion about this tutorial on Flickr . This is a basic tutorial about how to process pictures in Photivo that were taken with an infrared filter. The image you see was taken with a regular Pentax K20 and Hoya R72 filter. Right after opening an infrared picture it has a very severe red/brown tint. So, the first thing I do is getting the spot white balance on some leaves in the image (because white leaves in IR images tend to look good); here I used the lawn. This preview is in tab mode, so no filters in the following tabs are applied, besides the contrast corrections in the Output tab. In the Geometry tab I corrected the rotation and perspective to get the building straight. That made black borders appear, so I needed to crop and then resize to the screen shot resolution. In the preview you see the crop tool in action. Now a really essential step follows in the RGB tab. We have to switch the red and the blue channel with the channel mixer. You can do this manually or by opening the IR_Channelswitch preset like I did. Then Brighten just does its job… Since it still looks rather dull, we need some contrast. I chose the two Texture contrast tools with large scale, but you should of course also experiment with the other contrast tools till you like the look. Processing in the Sharpen/Noise tab is always highly subjective. I chose the Luminance Denoise Curve to get cleaner blue values (curve above midline) and increase structure in the other values (curve below midline). Furthermore to get some more pixel contrast I used the microcontrast of the Gradient Sharpen tool. Just a little more color with the Saturation Curve in adaptive mode and a weak vignette to keep the viewers focus. Here's the picture after all processing, including the contrast setting on the Output tab for completeness. No filters are active on the EyeCandy tab. I hope you also consider this a solid IR picture. However, personally I would not stop here. I like it a bit more dreamy and unreal. So, here is my final version. The filters differ only on the last three tabs. The screenshot uses the active tools view (rightmost button below the histogram) to to give an overview of all active tools. Have fun while playing with Photivo to get your desired look","tags":"Tutorials","url":"pages/Manual/Tutorials/Infrared.html"},{"title":"Internals","text":"","tags":"Manual","url":"pages/Manual/Internals.html"},{"title":"License","text":"GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. Preamble The GNU General Public License is a free, copyleft license for software and other kinds of works. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions. Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and modification follow. TERMS AND CONDITIONS 0. Definitions. \"This License\" refers to version 3 of the GNU General Public License. \"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. \"The Program\" refers to any copyrightable work licensed under this License. Each licensee is addressed as \"you\". \"Licensees\" and \"recipients\" may be individuals or organizations. To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work. A \"covered work\" means either the unmodified Program or a work based on the Program. To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion. 1. Source Code. The \"source code\" for a work means the preferred form of the work for making modifications to it. \"Object code\" means any non-source form of a work. A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work. 2. Basic Permissions. All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary. 3. Protecting Users' Legal Rights From Anti-Circumvention Law. No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures. When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures. 4. Conveying Verbatim Copies. You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee. 5. Conveying Modified Source Versions. You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions: a) The work must carry prominent notices stating that you modified it, and giving a relevant date. b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to \"keep intact all notices\". c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regarptess of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it. d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so. A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate. 6. Conveying Non-Source Forms. You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways: a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange. b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b. d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regarptess of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d. A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work. A \"User Product\" is either (1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regarptess of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regarptess of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product. \"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made. If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regarptess of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM). The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying. 7. Additional Terms. \"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission. Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms: a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or d) Limiting the use for publicity purposes of names of licensors or authors of the material; or e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors. All other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying. If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms. Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way. 8. Termination. You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11). However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10. 9. Acceptance Not Required for Having Copies. You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so. 10. Automatic Licensing of Downstream Recipients. Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License. An \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it. 11. Patents. A \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's \"contributor version\". A contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License. Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version. In the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party. If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. \"Knowingly relying\" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it. A patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007. Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law. 12. No Surrender of Others' Freedom. If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program. 13. Use with the GNU Affero General Public License. Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such. 14. Revised Versions of this License. The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation. If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program. Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version. 15. Disclaimer of Warranty. THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. Limitation of Liability. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. 17. Interpretation of Sections 15 and 16. If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee. END OF TERMS AND CONDITIONS","tags":"pages","url":"pages/License.html"},{"title":"\"Local Edit\" Processing Tab","text":"Spot Tuning This tool allows you to correct specific parts of the image. In principle all filters on the other tabs work on the whole image, though they might be constrained by global masks (like a luminance mask in Gimp). The difference with this tool is, that the masks used for calculation are local. So, when you add a new spot, you click on the image and Photivo gets the position and the color values of that pixel. Starting from these two values a local mask is calculated and the luminance curve as well as the saturation and hue adjustments are applied only to pixels inside that mask. The mask consists of all pixels that have similar color values as the starting pixel and can be connected to the starting pixel on a path of only such pixels. Example: Consider an image with a blue sky and a tall building in the middle that extends beyond the top of the image, essentially cutting the sky into two unconnected parts. When you choose the normal saturation curve to adjust the blue values, both parts of the sky get the same effect. With spot tuning you can create a spot each and adjust the two parts of the sky independently. Brother John was so kind to prepare a short feature video which shows the basic usage of this new tool. The Adobe Flash Plugin is needed to display this content.","tags":"Tabs","url":"pages/Manual/Tabs/LocalEdit.html"},{"title":"Luminance masks","text":"In Photivo several filters rely internally on a luminance mask to restrict the effect of a filter to a certain tonal range. These masks are modelled after the common workflow in Gimp: Get a luminance representation of the image and mask the desired parts. Parameters: MaskType Lower Limit (Range: 0 to 1) Upper Limit (Range: 0 to 1) Softness (Range: -2 to 2) Behaviour All values : It is a full mask, so all parts get the same full intensity. The other three sliders have no impact at this setting. Shadows : The darker values get more impact as the brighter ones. By increasing Lower Limit it will get even stronger in the darker areas. By decreasing Upper Limit one can mask out the bright areas of the image. Midtones : Only the midtones of the image are selected. Lower Limit to min and Upper Limit to max result in an even effect all over the image (same as all values ). By increasing Lower Limit one can mask out the dark areas and by decreasing Upper Limit the bright areas can be masked out. Highlights : The effect is stronger in the brighter areas. By increasing Lower Limit the darker areas can be masked out, by decreasing Upper Limit the effect gets even stronger in the brighter areas. The Softness slider brightens or darkens the layermask, which additionally controls the strength of the effect. The strength of the effect decreases with increasing softness values, which means the softness of the transition areas increases with increasing softness values. Since the image is represented with linear RGB values in Photivo, Lower Limit and Upper Limit may differ a lot from what you expect from the (gamma corrected) histogram. To get a better response please enable Inputs › Nonlinear slider respone in Photivo Settings .","tags":"Internals","url":"pages/Manual/Internals/LuminanceMask.html"},{"title":"Manual","text":"This is the online manual for Photivo. Have a look at the navigation pane on the left. From there your can reach every article available on this wiki. If you are new to Photivo you might want to begin with the general article about using Photivo . It also contains a list of all the mouse actions and keyboard shortcuts . All of Photivo's tools and filters are explained in the Tabs section. (Well, they will be once the section is finished. ) You can also reach the help for a specific tool directly from Photivo's via its help function. Please have also a look at the Spanish Photivo manual kindly provided by Juan Cesar Jover. Also, have a look a the rest of the wiki, especially the tutorials section.","tags":"pages","url":"pages/Manual.html"},{"title":"Mouse and Keyboard","text":"Open images Drag and drop an image to the preview area. Use the open button on the Input tab . Use Ctrl + O Commandline (the linux way): \"photivo -i FILENAME\" or \"photive FILENAME\" on a Mac: drag and drop to dock icon or use \"Open With\" in Finder Processing The processing will start after each change, if not set to manual . During processing the interface it not responsive , so don't hammer it . However, this is supposed to change in the near future. Mouse The scroll wheel has a different \"speed\" on the sliders and on the number inputs to allow more precise control. Right mouse button resets sliders and comboboxes. Curve windows, image view and the histogram have a context menu with functions. Keys Key Meaning Zoom 1 50% 2 100% 3 200% 4 Zoom fit Image preview 0 RGB 9 Structure view 8 L* 7 a* 6 b* 5 Gradient C Toggle clipping preview T Toggle tab preview mode Controls Space bar Show/hide side panel I Info tab P Processing tab S Settings tab F11 Toggle fullscreen Esc Get back to original states from various situations File handling Ctrl + O Open image Ctrl + P Open preset Ctrl + S Save current pipe Ctrl + G Send to Gimp (plugin must be working for that) Pipe control M Toggle manual mode F5 Run pipe (in manual mode) Tool control A List active tools H List hidden tools U Unhide all tools on the current tab B List blocked tools Alt + 1 … Alt + 8 Activate processing tabs from top to bottom, starting with the Camera tab ( Alt+1 ) and ending with the Output tab ( Alt+8 ) Alt + mouse wheel Switch between processing tabs. The mouse cursor can be anywhere when doing this. , Switch to the preceeding processing tab. . Switch to the following processing tab. remark : if on a mac use cmd/apple key instead of Ctrl","tags":"UsingPhotivo","url":"pages/Manual/UsingPhotivo/MouseAndKeyboard.html"},{"title":"\"Output\" Processing Tab","text":"The contrast filters (curves, gamma compensation, sigmoidal contrast) on this tab are always applied to your image, also when the tab preview for another tab is enabled. Background: During the processing of this tab the color space conversion from linear RGB to the preview or output profile is calculated. So, in most cases the image will be transformed to sRGB. With this transformation the image gets a lot brighter (you don't see this in Photivo) since the gamma curve of sRGB is applied. However, many people consider the result of this gamma curve unpleasant, so most other programs apply additional contrast to the image. Photivo offers several possibilities: the two curves (e.g. to load a camera or purpose specific curve), the gamma compensation (like UFRaw) and sigmodial contrast. Those contrast adjustments are meant to stay fixed within reasonable bounds, e.g. if you always shoot landscape it shouldn't change. Of course, when your next assignment is a wedding with harsh contrasts, it may well change for that purpose… So, it's recommmended that you settle for an appearance you like and don't use these filters for creative purposes. However, it's a free world Base curve The base curve is a regular RGB curve on linear RGB data (like the one on the RGB tab). It is just called base curve to emphasize its purpose for general tone adjustment, e.g. it sets the base tone of the camera.","tags":"Tabs","url":"pages/Manual/Tabs/Output.html"},{"title":"Screenshots","text":"Wiesmann coupe at the Meilenwerk, Berlin. Full version on flickr. A view in the old German town Bamberg, please notice Photivos new sliders. Photivo's welcome screen This photo was taken at the baltic see at dusk. I tried to get an old style look with the colors and some grain emulation. Here you see the new 'night' theme of Photivo active. The photo was shot by Brother John during a visit of the Inca town of Machu Picchu. Being a contrast addict, I processed it with harsh contrasts giving that hyperrealistic look I like. A photo from palace Sanssouci in Potsdam. Before and after the editing in Photivo. You see, I like contrasts","tags":"AboutPhotivo","url":"pages/AboutPhotivo/Screenshots.html"},{"title":"Processing Tabs","text":"","tags":"Manual","url":"pages/Manual/Tabs.html"},{"title":"Theming Photivo GUI","text":"To achieve its unique look and the ability to switch between different themes Photivo mostly relies on Qt's styling abilities around QPalette , QStyle and QSS stylesheets. On top of that ptTheme has its own stylsheet format and parser to avoid duplicated stylesheets and define colour variables in one single place instead of putting the actual colour values wherever you need them. At the moment it is not possible to add new themes without making changes to the C++ source code as well. You can alter the existing themes, but consider this to be at your own risk. Theme Tweaking with Custom Stylesheets To tweak some aspects of a theme without touching the \"official\" theming files the best way is to use a custom QSS stylesheet. QSS is Qt's version of the web world's CSS stylesheets. Basically it's CSS with several Qt specific additions. Assuming you know a bit about CSS , a good place to start is the Qt Stylesheet documentation . For writing a custom stylesheet you'll want to keep the style sheets reference and examples handy. Also the Photivo.qss file in Photivo's Themes subfolder is a good reference. There the major part of Photivo's built-in themes are defined. Things to keep in mind: To load a custom theme file go to Settings › Theming in Photivo and load the file via the Open button to the left of the two theme combo boxes. A custom stylesheet is an addition to the style you choose in the Theming section.It is intended to tweak an existing theme. Most likely you won't be able to build a completely new theme this way. The $Colourname$ variables you see in Photivo.qss do not work in custom stylesheets. You must use the actual colour values themselves. Photivo Themes Explained A Photivo theme consists of a .ptheme file defining variables and one or more .qss files defining the actual style rules. For example the default Dark grey style is defined in DarkGrey.ptheme , Photivo.qss , Photivo.windows.qss and Photivo.linux.qss . Photivo's theme files are not intended to be edited by users. The theme parser is not error tolerant! It will break quickly if you don't stick to the rules. Except comments a .ptheme file consists of an @Variables section followed by an @import command. Both are mandatory. Multiple @Variables or @import are not allowed. Comments are only allowed at the start of the file before the @Variables section. Do not use comments anywhere else! Comments must be the slash-star type, i.e. starting with /* and ending with */ . They can span multiple lines. Everything is case sensitive. Theme and qss files are assumed to be UTF-8 encoded. Always use the forward slash \" / \" as path delimiter. .ptheme files must reside in <PhotivoProgramFolder>/Themes The @Variables section defines global color values and paths to graphical elements. Access them anywhere in the QSS as $VariableName$ . Always define ALL the colors. You MUST use #rrggbb notation compatible with QColor::name() For graphics, paths can be Qt resource paths or real file paths. File paths may be absolute or relative to the .qss file's location. The @import specifies the theme's QSS files. Only give the file name without the extension, i.e. for \"Photivo.qss\" write \"Photivo\". The file name may include a path. Paths may be absolute or relative to the .ptheme file's location. The file extension for all QSS files must be .qss (lower case). Avoid additional @import rules in the QSS files themselves. You cannot use the variables from the @Variables section in additionally imported files. Platform specific settings are supported in additional QSS files. For example \"Photivo.qss\" may be accompanied by \"Photivo.windows.qss\", \"Photivo.linux.qss\" and \"Photivo.mac.qss\". If present the parser appends additional files to the end of the main style file depending on the platform Photivo was compiled for.","tags":"Internals","url":"pages/Manual/Internals/Theming.html"},{"title":"3rd Party Licenses","text":"Dependencies Below are the licence terms of the libraries Photivo links to dynamically. GNU gettext Project website http://www.gnu.org/software/gettext/gettext.html Source code http://ftp.gnu.org/gnu/gettext/ Copyright © 1995-1997, 2000-2007 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later < http://gnu.org/licenses/gpl.html > This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. Glib Project website http://www.gtk.org/ Source code http://library.gnome.org/devel/glib/ GLIB - Library of useful routines for C programming Copyright (C) 1995-1997 Peter Mattis, Spencer Kimball and Josh MacDonald GAsyncQueue: asynchronous queue implementation, based on GQueue. Copyright (C) 2000 Sebastian Wilhelmi; University of Karlsruhe This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. Qt Project website http://qt-project.org/ Source code http://releases.qt-project.org/qt4/source/ Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies). All rights reserved. Contact: Nokia Corporation (qt-info@nokia.com) This file is part of the QtCore module of the Qt Toolkit. $QT_BEGIN_LICENSE: LGPL $ GNU Lesser General Public License Usage This file may be used under the terms of the GNU Lesser General Public License version 2.1 as published by the Free Software Foundation and appearing in the file LICENSE. LGPL included in the packaging of this file. Please review the following information to ensure the GNU Lesser General Public License version 2.1 requirements will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html . In addition, as a special exception, Nokia gives you certain additional rights. These rights are described in the Nokia Qt LGPL Exception version 1.1, included in the file LGPL _EXCEPTION.txt in this package. GNU General Public License Usage Alternatively, this file may be used under the terms of the GNU General Public License version 3.0 as published by the Free Software Foundation and appearing in the file LICENSE. GPL included in the packaging of this file. Please review the following information to ensure the GNU General Public License version 3.0 requirements will be met: http://www.gnu.org/copyleft/gpl.html . Other Usage Alternatively, this file may be used in accordance with the terms and conditions contained in a signed written agreement between you and Nokia. Nokia Qt LGPL Exception version 1.1 As an additional permission to the GNU Lesser General Public License version 2.1, the object code form of a \"work that uses the Library\" may incorporate material from a header file that is part of the Library. You may distribute such object code under terms of your choice, provided that: (i) the header files of the Library have not been modified; and (ii) the incorporated material is limited to numerical parameters, data structure layouts, accessors, macros, inline functions and templates; and (iii) you comply with the terms of Section 6 of the GNU Lesser General Public License version 2.1. Moreover, you may apply this exception to a modified version of the Library, provided that such modification does not involve copying material from the Library into the modified Library's header files unless such material is limited to (i) numerical parameters; (ii) data structure layouts; (iii) accessors; and (iv) small macros, templates and inline functions of five lines or less in length. Furthermore, you are not required to apply this additional permission to a modified version of the Library. zlib Project website http://zlib.net/ Source code http://sourceforge.net/projects/libpng/files/zlib/ (C) 1995-2012 Jean-loup Gailly and Mark Adler This software is provided 'as-is', without any express or implied warranty. In no event will the authors be held liable for any damages arising from the use of this software. Permission is granted to anyone to use this software for any purpose, including commercial applications, and to alter it and redistribute it freely, subject to the following restrictions: 1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required. 2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software. 3. This notice may not be removed or altered from any source distribution. Jean-loup Gailly Mark Adler jloup@gzip.org madler@alumni.caltech.edu LibPNG Project website http://www.libpng.org/pub/png/libpng.html Source code ftp://ftp.simplesystems.org/pub/libpng/png/src/ This copy of the libpng notices is provided for your convenience. In case of any discrepancy between this copy and the notices in the file png.h that is included in the libpng distribution, the latter shall prevail. COPYRIGHT NOTICE, DISCLAIMER, and LICENSE: If you modify libpng you may insert additional notices immediately following this sentence. This code is released under the libpng license. libpng versions 1.2.6, August 15, 2004, through 1.5.12, July 11, 2012, are Copyright © 2004, 2006-2012 Glenn Randers-Pehrson, and are distributed according to the same disclaimer and license as libpng-1.2.5 with the following individual added to the list of Contributing Authors Cosmin Truta libpng versions 1.0.7, July 1, 2000, through 1.2.5 - October 3, 2002, are Copyright © 2000-2002 Glenn Randers-Pehrson, and are distributed according to the same disclaimer and license as libpng-1.0.6 with the following individuals added to the list of Contributing Authors Simon-Pierre Cadieux Eric S. Raymond Gilles Vollant and with the following additions to the disclaimer: There is no warranty against interference with your enjoyment of the library or against infringement. There is no warranty that our efforts or the library will fulfill any of your particular purposes or needs. This library is provided with all faults, and the entire risk of satisfactory quality, performance, accuracy, and effort is with the user. libpng versions 0.97, January 1998, through 1.0.6, March 20, 2000, are Copyright © 1998, 1999 Glenn Randers-Pehrson, and are distributed according to the same disclaimer and license as libpng-0.96, with the following individuals added to the list of Contributing Authors: Tom Lane Glenn Randers-Pehrson Willem van Schaik libpng versions 0.89, June 1996, through 0.96, May 1997, are Copyright © 1996, 1997 Andreas Dilger Distributed according to the same disclaimer and license as libpng-0.88, with the following individuals added to the list of Contributing Authors: John Bowler Kevin Bracey Sam Bushell Magnus Holmgren Greg Roelofs Tom Tanner libpng versions 0.5, May 1995, through 0.88, January 1996, are Copyright © 1995, 1996 Guy Eric Schalnat, Group 42, Inc. For the purposes of this copyright and license, \"Contributing Authors\" is defined as the following set of individuals: Andreas Dilger Dave Martindale Guy Eric Schalnat Paul Schmidt Tim Wegner The PNG Reference Library is supplied \"AS IS\". The Contributing Authors and Group 42, Inc. disclaim all warranties, expressed or implied, including, without limitation, the warranties of merchantability and of fitness for any purpose. The Contributing Authors and Group 42, Inc. assume no liability for direct, indirect, incidental, special, exemplary, or consequential damages, which may result from the use of the PNG Reference Library, even if advised of the possibility of such damage. Permission is hereby granted to use, copy, modify, and distribute this source code, or portions hereof, for any purpose, without fee, subject to the following restrictions: 1. The origin of this source code must not be misrepresented. 2. Altered versions must be plainly marked as such and must not be misrepresented as being the original source. 3. This Copyright notice may not be removed or altered from any source or altered source distribution. The Contributing Authors and Group 42, Inc. specifically permit, without fee, and encourage the use of this source code as a component to supporting the PNG file format in commercial products. If you use this source code in a product, acknowledgment is not required but would be appreciated. A \"png_get_copyright\" function is available, for convenient use in \"about\" boxes and the like: printf(\"%s\",png_get_copyright(NULL)); Also, the PNG logo (in PNG format, of course) is supplied in the files \"pngbar.png\" and \"pngbar.jpg (88x31) and \"pngnow.png\" (98x31). Libpng is OSI Certified Open Source Software. OSI Certified Open Source is a certification mark of the Open Source Initiative. Glenn Randers-Pehrson glennrp at users.sourceforge.net July 11, 2012 LibJpeg Project website http://www.ijg.org/ Source code http://www.ijg.org/files/ The authors make NO WARRANTY or representation, either express or implied, with respect to this software, its quality, accuracy, merchantability, or fitness for a particular purpose. This software is provided \"AS IS\", and you, its user, assume the entire risk as to its quality and accuracy. This software is copyright (C) 1991-2012, Thomas G. Lane, Guido Vollbeding. All Rights Reserved except as specified below. Permission is hereby granted to use, copy, modify, and distribute this software (or portions thereof) for any purpose, without fee, subject to these conditions: (1) If any part of the source code for this software is distributed, then this README file must be included, with this copyright and no-warranty notice unaltered; and any additions, deletions, or changes to the original files must be clearly indicated in accompanying documentation. (2) If only executable code is distributed, then the accompanying documentation must state that \"this software is based in part on the work of the Independent JPEG Group\". (3) Permission for use of this software is granted only if the user accepts full responsibility for any undesirable consequences; the authors accept NO LIABILITY for damages of any kind. These conditions apply to any software derived from or based on the IJG code, not just to the unmodified library. If you use our work, you ought to acknowledge us. Permission is NOT granted for the use of any IJG author's name or company name in advertising or publicity relating to this software or products derived from it. This software may be referred to only as \"the Independent JPEG Group's software\". We specifically permit and encourage the use of this software as the basis of commercial products, provided that all warranty or liability claims are assumed by the product vendor. ansi2knr.c is included in this distribution by permission of L. Peter Deutsch, sole proprietor of its copyright holder, Aladdin Enterprises of Menlo Park, CA. ansi2knr.c is NOT covered by the above copyright and conditions, but instead by the usual distribution terms of the Free Software Foundation; principally, that you must include source code if you redistribute it. (See the file ansi2knr.c for full details.) However, since ansi2knr.c is not needed as part of any program generated from the IJG code, this does not limit you more than the foregoing paragraphs do. The Unix configuration script \"configure\" was produced with GNU Autoconf. It is copyright by the Free Software Foundation but is freely distributable. The same holds for its supporting scripts (config.guess, config.sub, ltmain.sh). Another support script, install-sh, is copyright by X Consortium but is also freely distributable. The IJG distribution formerly included code to read and write GIF files. To avoid entanglement with the Unisys LZW patent, GIF reading support has been removed altogether, and the GIF writer has been simplified to produce \"uncompressed GIFs\". This technique does not use the LZW algorithm; the resulting GIF files are larger than usual, but are readable by all standard GIF decoders. We are required to state that \"The Graphics Interchange Format© is the Copyright property of CompuServe Incorporated. GIF(sm) is a Service Mark property of CompuServe Incorporated.\" LibTIFF Project website http://www.libtiff.org/ Source code ftp://ftp.remotesensing.org/pub/libtiff/ Copyright © 1988-1997 Sam Leffler Copyright © 1991-1997 Silicon Graphics, Inc. Permission to use, copy, modify, distribute, and sell this software and its documentation for any purpose is hereby granted without fee, provided that (i) the above copyright notices and this permission notice appear in all copies of the software and related documentation, and (ii) the names of Sam Leffler and Silicon Graphics may not be used in any advertising or publicity relating to the software without the specific, prior written permission of Sam Leffler and Silicon Graphics. THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. Lcms2 Project website http://littlecms.com/ Source code http://sourceforge.net/projects/lcms/files/lcms/ Little CMS Copyright © 1998-2011 Marti Maria Saguer Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Libiconv Project website http://www.gnu.org/software/libiconv/ Source code http://ftp.gnu.org/pub/gnu/libiconv/ Copyright (C) 1999-2003, 2005-2006, 2008 Free Software Foundation, Inc. This file is part of the GNU LIBICONV Library. The GNU LIBICONV Library is free software; you can redistribute it and/or modify it under the terms of the GNU Library General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. The GNU LIBICONV Library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public License for more details. You should have received a copy of the GNU Library General Public License along with the GNU LIBICONV Library; see the file COPYING.LIB. If not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. Expat Project website http://www.libexpat.org/ Source code http://sourceforge.net/projects/expat/files/expat/ Copyright © 1998, 1999, 2000 Thai Open Source Software Center Ltd and Clark Cooper Copyright © 2001, 2002, 2003, 2004, 2005, 2006 Expat maintainers. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Exiv2 Project website http://www.exiv2.org/download.html Source code http://www.exiv2.org/download.html Copyright (C) 2004-2011 Andreas Huggel ahuggel@gmx.net Exiv2 is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. Alternatively, Exiv2 is also available with a commercial license, which allows it to be used in closed-source projects. Contact me for more information. Exiv2 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, 5th Floor, Boston, fftw Project website http://www.fftw.org/ Source code ftp://ftp.fftw.org/pub/fftw/ Copyright © 2003, 2007-11 Matteo Frigo Copyright © 2003, 2007-11 Massachusetts Institute of Technology This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA GraphicsMagick Project website http://www.graphicsmagick.org/ Source code ftp://ftp.graphicsmagick.org/pub/GraphicsMagick/snapshots/ This file is part of the GraphicsMagick software distributed by the GraphicsMagick Group. [*Please note that the legal community considers 15 or more total lines of code or text (not necessarily contiguous) to be significant for the purposes of copyright. Repeated changes such as renaming a symbol has similar significance to changing one line of code.*] The licenses which components of this software fall under are as follows. 1) In November 2002, the GraphicsMagick Group created GraphicsMagick from ImageMagick Studio's ImageMagick and applied the \"MIT\" style license: Copyright (C) 2002 - 2012 GraphicsMagick Group Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. 2) In October 1999, ImageMagick Studio assumed the responsibility for the development of ImageMagick (forking from the distribution by E. I. du Pont de Nemours and Company) and applied a new license: Copyright (C) 2002 ImageMagick Studio, a non-profit organization dedicated to making software imaging solutions freely available. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (\"ImageMagick\"), to deal in ImageMagick without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of ImageMagick, and to permit persons to whom the ImageMagick is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of ImageMagick. The software is provided \"as is\", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall ImageMagick Studio be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with ImageMagick or the use or other dealings in ImageMagick. Except as contained in this notice, the name of the ImageMagick Studio shall not be used in advertising or otherwise to promote the sale, use or other dealings in ImageMagick without prior written authorization from the ImageMagick Studio. 3) From 1991 to October 1999 (through ImageMagick 4.2.9), ImageMagick was developed and distributed by E. I. du Pont de Nemours and Company: Copyright 1999 E. I. du Pont de Nemours and Company Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (\"ImageMagick\"), to deal in ImageMagick without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of ImageMagick, and to permit persons to whom the ImageMagick is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of ImageMagick. The software is provided \"as is\", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall E. I. du Pont de Nemours and Company be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with ImageMagick or the use or other dealings in ImageMagick. Except as contained in this notice, the name of the E. I. du Pont de Nemours and Company shall not be used in advertising or otherwise to promote the sale, use or other dealings in ImageMagick without prior written authorization from the E. I. du Pont de Nemours and Company. 4) The GraphicsMagick Base64Decode() and Base64Encode() functions are based on source code obtained from OpenSSH. This source code is distributed under the following license: Copyright © 2000 Markus Friedl. All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE AUTHOR \\`\\`AS IS\\'\\' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 5) Many of the pattern images in coders/logo.c are derived from XFig, which is distributed under the following license: | FIG : Facility for Interactive Generation of figures | Copyright © 1985-1988 by Supoj Sutanthavibul | Parts Copyright © 1989-2000 by Brian V. Smith | Parts Copyright © 1991 by Paul King Any party obtaining a copy of these files is granted, free of charge, a full and unrestricted irrevocable, world-wide, paid up, royalty-free, nonexclusive right and license to deal in this software and documentation files (the \"Software\"), including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons who receive copies from any such party to do so, with the only requirement being that this copyright notice remain intact. 6) The documentation for the composition operators is copied from the rlecomp manual page, which is authored by Rod Bogart and John W. Peterson. Rlecomp is part of the Utah Raster Toolkit distributed by the University of Michigan and the University of Utah. The copyright for this manual page is as follows: Copyright © 1986, University of Utah This software is copyrighted as noted below. It may be freely copied, modified, and redistributed, provided that the copyright notice is preserved on all copies. There is no warranty or other guarantee of fitness for this software, it is provided solely \"as is\". Bug reports or fixes may be sent to the author, who may or may not act on them as he desires. You may not include this software in a program or other software product without supplying the source, or without informing the end-user that the source is available for no extra charge. If you modify this software, you should include a notice giving the name of the person performing the modification, the date of modification, and the reason for such modification. 7) The source code comprising swab.c is originally derived from libtiff which has the following license: | Copyright © 1988-1997 Sam Leffler | Copyright © 1991-1997 Silicon Graphics, Inc. Permission to use, copy, modify, distribute, and sell this software and its documentation for any purpose is hereby granted without fee, provided that (i) the above copyright notices and this permission notice appear in all copies of the software and related documentation, and (ii) the names of Sam Leffler and Silicon Graphics may not be used in any advertising or publicity relating to the software without the specific, prior written permission of Sam Leffler and Silicon Graphics. THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND, EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE. 8) The C++ API known as \"Magick++\", and which resides in the Magick++ directory, is distributed under the following license: Copyright 1999 - 2003 Bob Friesenhahn bfriesen@simple.dallas.tx.us Permission is hereby granted, free of charge, to any person obtaining a copy of the source files and associated documentation files (\"Magick++\"), to deal in Magick++ without restriction, including without limitation of the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of Magick++, and to permit persons to whom the Magick++ is furnished to do so, subject to the following conditions: This copyright notice shall be included in all copies or substantial portions of Magick++. The copyright to Magick++ is retained by its author and shall not be subsumed or replaced by any other copyright. The software is provided \"as is\", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall Bob Friesenhahn be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with Magick++ or the use or other dealings in Magick++. 9) The GraphicsMagick HaldClutImagePixels() function in magick/hclut.c is based on source code from the HaldCLUT package by Eskil Steenberg ( http://www.quelsolaar.com/technology/clut.html ) which is distributed under the following license: Copyright © 2005 Eskil Steenberg. All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. THIS SOFTWARE IS PROVIDED BY THE AUTHOR \\`\\`AS IS\\'\\' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 10) GraphicsMagick makes use of third-party \"delegate\" libraries to support certain optional features. These libraries bear their own copyrights and licenses, which may be more or less restrictive than the GraphicsMagick license. For convenience, when GraphicsMagick is bundled with (or compiled with) \"delegate\" libraries, a copy of the licenses for these libraries is provided in a \"licenses\" directory. LibLqr Project website http://liblqr.wikidot.com/ Source code http://liblqr.wikidot.com/en:download-page Copyright (C) 2007-2009 Carlo Baldassi (the \"Author\") carlobaldassi@gmail.com . All Rights Reserved. This library implements the algorithm described in the paper \"Seam Carving for Content-Aware Image Resizing\" by Shai Avidan and Ariel Shamir which can be found at http://www.faculty.idc.ac.il/arik/imret.pdf This program is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; version 3 dated June, 2007. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License along with this program; if not, see < http://www.gnu.org/licenses/ > Lensfun Project website http://lensfun.sourceforge.net/ Source code http://sourceforge.net/projects/lensfun/files/ LensFun - a library for maintaining a database of photographical lenses, and providing the means to correct some of the typical lens distortions. Copyright (C) 2007 by Andrew Zabolotny This library is free software; you can redistribute it and/or modify it under the terms of the GNU Library General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public License for more details. You should have received a copy of the GNU Library General Public License along with this library; if not, write to the Free Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.","tags":"License","url":"pages/License/ThirdParty.html"},{"title":"Translating","text":"Photivo uses Qt's built-in translation capabilities. That makes it easy and convenient to translate but needs a bit of setting up at first. In this article we walk you through all the installation steps. It's probably a good idea to get in touch anyway to avoid multiple people doing the same language in parallel. Setup the Translation Environment From Qt you need Qt Linguist to do the actual translation and the lupdate tool to create and update the translation file for your language. Also you need the Mercurial version control software to get the Photivo source code. Windows First create a folder where you want all the translation tools and Photivo itself to be located. We'll assume C:\\ptTranslate in this article but you can use any folder you like. Qt Linguist and lupdate are included in the Qt SDK that you can get from the official Qt download site . However, that is a huge download (over 300 MB ) and most of it is unnecessary. That's why we provide a stripped down version (from the Qt 4.7.0 SDK installer) with only the necessary stuff: grab it from Google Code and unpack it to your C:\\ptTranslate folder. Mercurial: Get the Windows commandline setup (MSI version recommended) from the Mercurial download site and install it. If you already have Mercurial or a graphical tool like ToroiseHg installed, that will work as well. Open a console window (also known as command prompt or DOS window ) in your C:\\ptTranslate folder. Linux (Probably works the same or very similar for Mac .) Create a directory for all the translation stuff. We'll assume ~/ptTranslate for this article Install Qt Linguist and lupdate via your package manager. If you cannot find them individually, look for the Qt 4 SDK. Also install Mercurial, if you do not already have it. A graphical tool like ToroiseHg will work as well. Open a terminal window in your ~/ptTranslate directory. Prepare the new translation Now you are ready to get your translation started. First you get a copy of Photivo's source code, then you tell Photivo about the new language and generate the translation file. From the opened console window first get a clone of the Photivo source code repository. Execute these lines (works for both Windows and Linux): hg clone https://photivo.googlecode.com/hg/ photivo cd photivo hg update default Leave the window open. Open the file photivoProject.pro in the photivoProject subfolder with a text editor and at the very end of the file add a new translation line for your language (just below the other translation lines). TRANSLATIONS += ../Translations/photivo_LANGNAME.ts Replace the LANGNAME with the English name of your language, e.g. \"German\" or \"Italian\". Photivo uses the LANGNAME part of the file name to display the available translations on the Settings tab. In the console window run lupdate : Windows : \"C:\\ptTranslate\\lupdate.exe\" photivo.pro Linux : lupdate photivo.pro There should now be a new photivo_ LANGNAME .ts file in Photivo's Translations subfolder. Especially on Windows lupdate will produce some errors or warnings. As long as the .ts file is created you don't need to worry about them. Translating Open your photivo_ LANGNAME .ts with Qt Linguist and start translating. When you open the translation file for the first time Qt Linguist displays the language selection dialog. Adjust the Destination language as needed but keep the Source language unchanged, even if it looks weird. The Qt documentation includes a tutorial for Qt Linguist . Test and Release You can test your translation with your normal Photivo installation. Compile the translation file ( File › Release in Qt Linguist). That produces photivo_ LANGNAME .qm in the same folder as your photivo_ LANGNAME .ts . Copy the .qm file to Linux : ~/.photivo/translations Win Vista/7 : C:\\Users\\ username \\AppData\\Roaming\\Photivo\\Translations (the path might appear translated into your Windows's language in Explorer) Win XP : C:\\Documents and Settings\\ username \\Application Data\\Photivo\\Translations (the path is translated into your Windows's language). Start Photivo, go to the Settings tab and choose your language from the Translation combobox. To get your translation officially into Photivo we only need the completed .ts file – but if you can provide a final .qm as well, we won't complain. The translation needs to be licensed under the GNU GPL version 3 like the rest of Photivo. Also tell us how you'd like to be credited. Full name? Nickname only? E-mail address? Update the translation Of course with time text in Photivo's GUI will change and new text will appear. That's no immediate problem, because if Photivo cannot find a translation for a certain item it will just use the default English text. Updating the translation is easy: Like above open a console window in your Photivo source code folder (where photivo.pro is located). Update to the latest source code revision: hg pull hg update default Run lupdate to add the new strings to your photivo_ LANGNAME .ts : Windows : \"C:\\ptTranslate\\lupdate.exe\" photivo.pro Linux : lupdate photivo.pro In Qt Linguist the new strings are marked as unfinished so you can find them easily.","tags":"Development","url":"pages/Development/Translating.html"},{"title":"Tutorials","text":"English Dehaze Fake HDR Infrared processing Basic usage and exposure recovery Using UniWB Get similar results as with UFRaw Overview video from meetthegimp.org Spanish Introducción a photivo Medyr's blog has several good articles about different Photivo topics. Future ideas Contrast/Tonemapping Sharpen Denoise Black and white","tags":"Manual","url":"pages/Manual/Tutorials.html"},{"title":"Using Photivo","text":"Calling Photivo intuitive would be a bit of a stretch by any means. But once we know our way around using it feels quite fluent. In this article we'll explore the major details of using Photivo. The Main Window Essentially, Photivo's application window consists of three areas. The tool pane on the left, where all the editing takes place. The large image area , where we see our image. The zoom bar at the bottom, mainly used for zooming the image. We'll take a closer look at the the tool pane later since it is a bit more complex. The other two areas are quite straight forward, though. You can change the width of the tool pane by grabbing and dragging its right border (where the mouse cursor changes). In the same way grab the bottom border of the histogram to change its height. The Image Area The largest part of Photivo's window is reserved for the image. You can use the mouse wheel or the number keys 1 to 4 to zoom. In the top right corner Photivo displays the new zoom settings when you change it. The top left corner is used for other status overlays. For example, there Photivo displays the current general status when processing the pipe. The image area also has a right-click context menu. Two of its sub-menus are especially interesting. Mode puts the image in a variety of specialised display modes. They are informative only, i.e. even when one of them is active while saving the normal RGB picture is saved. RGB is the normal display of the \"real\" picture. Structure gives us a good impression of the distribution of detail throughout the image. Gradient shows the luminance gradient that represents the edges in the picture. L *, a * and b * display the different channels of the LAB colour space: luminance (L) and the two colour channels (A, B). Clipping indicates clipped image areas. Indicate toggles the clipping indicator. Over exposure and Under exposure controls the type of clipping that is taken into account. With R , G and B we select for which of the RGB channels we want to see over/under expose information. The Zoom Bar In the zoom bar we can do most of the things the image area itself provides as well, i.e. zooming, changing the view mode and putting Photivo into fullscreen mode. Since everything is available in the image area anyway, I tend to hide the zoom bar and make a bit more space for the image itself. Opening the Sources Currently Photivo provides three ways to open a file. Drag&Drop the file onto the image area. Use the command line: photivo -i \"my input file.tif\" . The Input tool on the the Camera tab. Let's take a closer look at the Input tool. We can see entries for three types of input files. Open file loads an image. Photivo supports a wide variety of formats. In fact everything that dcraw and GraphicsMagick can handle. This includes most RAW image formats, all the major bitmap formats (JPEG, PNG, TIFF, etc.) and a lot more obscure formats. With Open settings file we load a previously saved filter configuration. That's the .pts files Photivo saves automatically alongside each output image. These files contain the complete filter chain for that particular picture. If you edit an image and later want to recreate your filters exactly as they were, just load the original image file, then load the settings file and you are back where you left off. Open preset is a similar function. Presets are basically general purpose settings files where you can store settings for individual filters. For example, if you find a particular setting for the Dynamic Range Compression filter useful in certain situations, right-click on the filter heading and chose Save preset to store the current configuration for this filter. It will automatically show up in the Open preset dialog. The second entry in the right-click menu, Append preset , adds a filter configuration to an existing preset. That way you can build presets that contain the configuration for more than one filter. Filtering In Photivo all filtering is done via the tool pane that is divided in three parts: the histogram at the top, the filter tabs with all the tools, the controls at the bottom. The Histogram The top of the tool pane is occupied by the histogram that shows you the RGB value distribution of your image from dark (on the left) to bright (on the right). Usually the combined graph for all three RGB channels is shown but you can change that in the histogram's context menu. Just select what you need from the Channel submenu. The second interesting context menu option is Selection that lets you restrict the histogram to a certain part of the image. It works similar to crop. You click Selection and when Photivo shows Crop in its status overlay select the relevant part of the image with the mouse. Another click on Selection changes back to normal full-image histogram view. Using Filters Filtering an image means configuring Photivo's processing pipe. Have a look at the Workflow article to get an idea about how the pipe works and how the tool pane's layout reflects the actual processing pipe. Basically filters are applied to the picture in the same order they appear in the tool pane. General Usage The tool pane is mainly designed to be used with a mouse. You can use the mouse wheel to do all the scrolling. Wheeling with the cursor positioned on the tabs changes through the tabs. Wheeling on a slider changes the slider's value by a rather large amount. If you need smaller steps, move your mouse cursor over the edit field displaying the actual value and continue wheeling there. You can also enter a specific value via the keyboard . To activate the new value you need to press Enter or click somewhere outside the edit field. A right click on a slider or combobox resets it to its default value. With a right click on the tool header and choosing Reset from the menu you can reset a complete tool to its defaults. Blocking and hiding tools Photivo provides several colour coded status indicators for the tools. See the following screenshot. A green dot on a tab means that at least one tool is active on that tab. Similarly individual tools get a green arrow if they are active. Red arrows indicate blocked tools. You can access the blocking functionality with a right click on the tool header. To block a tool, choose Block from the menu. The tool's settings stay at the value you chose but Photivo will exclude it from being processed in the pipe. To re-enable the tool, right click on the header again and choose Allow . That way you can quickly switch a filter on and off without losing its configuration. That's especially useful for filters with lots of sliders. With the same context menu you can also Hide filters from the GUI . Hidden filters are also disabled, i.e. they don't get processed even if they had active settings. Press H to see a list of all hidden tools. U unhides all tools on the current tab. The Bottom Controls The bottom part of the tool pane contains the essential non-filter tools and some status information. The controls in (1) affect the pipe. The combobox on the left sets the pipe size . For fastest processing and best quality you should choose the next possible pipe size that is larger than your needed output resolution. With the button next to the pipe size combobox you select the pipe's preview mode. In its default state (like shown in the screenshot) the image you see is always the fully processed one. Click the button to switch to tabbed preview. The pipe will still process all the way but what you'll actually see in the image area will change according to the tab you have selected. For example if you select the RGB tab you'll see the image as it looks when the pipe has run until the end of the RGB tab. Switch tabs to see other stages of processing. The manual checkbox and button control the pipe's execution mode. Usually the pipe re-processes automatically once you change any setting. When you activate manual mode, the pipe only runs when you explicitly execute it with the process button next to the manual checkbox or by pressing F5 . The controls in (2) switch between the tool pane's different modes. From left to right those are: Processing . The filter tabs for image editing. Settings . Photivo's programme options. Info . Displays most important EXIF data and information about image size. The bottom left status bar displays information about what Photivo is doing at the moment. The top right buttons are for output saving and Gimp export. Saving the Results When saving your finished image, first go to the Output Parameters on the Output tab. Here you can choose the file format and quality settings for the output file. For JPEG you should keep the colour space at 4:2:2 for maximum compatibility. When saving to a PNG file, Quality actually means compression level. There is no quality setting in the sense of the word because PNGs are always lossless. Include metadata writes the original EXIF data to the output file. Erase thumbnail discards all thumbnail images that might have been present in the the original image. Title , Tags and Rating are metadata entries that are compatible for example with digiKam but also a variety of other image organizers. You actually save the file with the save button (the floppy disk icon) in the bottom controls. A simple left click on the button triggers the default save action that can be configured in the settings. By default it is set to save the current pipe. A right click on the button opens the save menu. Save current pipe saves current state of the pipe, i.e. what you currently see on screen. Save full size processes the image in the 1:1 pipe (if necessary) and then saves the output. Save settings file only writes the .pts file that contains the complete settings for your picture. Save current pipe and Save full size also create that .pts file automatically. Save job file saves a job file that afterwards can be used in Photivo's batch mode. Job files can be executed by \" photivo -j JOBFILE \" on the terminal. Note: On windows there is no terminal output, unless you use the troubleshooter version of Photivo. Gimp Export Photivo can also export the processed image to Gimp for further editing. That's the job of the Gimp export button. A left click sends the image in the current pipe to Gimp. Right click the button for full size export. For the button to work you need to have the Photivo Gimp plugin installed.","tags":"Manual","url":"pages/Manual/UsingPhotivo.html"},{"title":"Videocast","text":"Episode 1: The Photivo Workflow Unlike many other photo applications Photivo is more of an image processor than an image editor. It works a bit differently than you might be used to. This video takes you on a tour of the important parts of Photivo's interface and shows you the general image processing workflow. Related wiki articles: Using Photivo , Mouse and Keyboard , Photivo's workflow The Adobe Flash Plugin is needed to display this content. Episode 2: Feature Demo: Spot Tuning (a.k.a. \"Local Spot Adjust\") It's been requested multiple times, we dropped a hint here and there and now it's finally almost finished: Photivo has a new tool for local edits ( still experimental ). In this episode we take a lot at what it can do. If you find it interesting download the experimental Windows version and discuss on flickr . If you want to compile yourself check out the \"spotrepair\" branch from the Google Code repository. Local Spot Adjust was renamed to Spot Tuning and has been part of the regular Photivo release for a while now. There were some minor changes to the way it works, but overall this Photivocast episode is still perfectly accurate. Related wiki articles: Local Adjust The Adobe Flash Plugin is needed to display this content.","tags":"Manual","url":"pages/Manual/Videocast.html"},{"title":"Workflow","text":"Processing Just a few lines about the processing in Photivo. The structure of Photivo's controls represents the order in which the filters are applied to a photo. Earlier tabs are processed first, e.g. Geometry runs earlier than Eyecandy . The same is true for individual filters inside a tab. The nearer to the beginning of its tab a filter is the earlier it runs. After each tab Photivo creates a cache of the current image state to keep processing times reasonable. When you change a filter and re-run the processing pipe Photivo starts with the first filter on the tab where you made the change and runs through all remaining tabs and filters. The tabs are ordered in a way to get the basic things like geometry or value distribution done first. Next in line are the quite expensive local contrast and denoise/sharpen filters, so that they need not be calculated over and over again. The Eyecandy tabs contain mostly filters for creative purposes, and you'll probably play around with these filters a lot. It only makes sense to not recalculate the expensive filters on the other tabs each time. As you can see, the overall idea is that you work your way through the tabs from top to bottom to get from your source image to the final result. Photivo tries to support this workflow by keeping unnecessary recalculations to a minimum. However, don't be afraid to change things on earlier tabs. The workflow is non-destructive, without any quality loss. You just might have to wait a bit for all filters to be processed again. Pipe size The pipe size is set in the bottom left corner of the tool bar, next to the preview mode button. It controls the size of the image which is currently calculated. So 1:4 means, the currently calculated and displayed image has a quarter of the length and width of the source image. Since the computation time relies to the square of the dimensions, with 1:4 you get around 1/16th of the processing time compared to the 1:1 pipe (actually you gain even more depending on the activated filters, but lets keep the math simple). The same goes for memory usage. Only on the 1:1 size Photivo uses the demosaicing algorithms, for smaller sizes there is a much faster algorithm that preserves details and reduces noise compared to doing the 1:1 demosaicing and scaling down afterwards. Furthermore most filters give a very precise preview of their impact on the smaller sizes, just some of the denoise and sharpen filters don't. But there is also use for that, since you should sharpen an image for printing (most likely 1:1 pipe) differently than an image for screen display (you'll probably never need 1:1 for this); there will be a separate tutorial about this. I guess most processed images are not printed, just viewed on screen in private or around the Internet. With 14 Mpx like many current cameras have the 1:2 pipe is even larger than full HD resolution (1920×1080). You even need to scale down on the Output tab with Web resize to get a wallpaper with proper resolution. So you can save the expensive 1:1 calculation you would have in many other programs that don't allow to reduce the pipe size from the beginning and scale down in the end instead. In the following table you can see the approximate pixel sizes you get with common Megapixels and different pipe sizes. 1:1 1:2 1:4 1:8 6 Mpx 3000×2000 1500×1000 750×500 375×250 14 Mpx 4650×3100 2325×1550 1160×775 630×390 18 Mpx 5250×3500 2625×1750 1310×875 655×440 24 Mpx 6000×4000 3000×2000 1500×1000 750×500 If you want to print an image that you saved earlier for the web with reduced pipe size, there is not much work to do. You want to get the best possible resolution, so you should go to the 1:1 pipe now (or use the full size mode on the Output tab if you're on a 32 bit system). After opening the original image just load the settings file Photivo saved along with the web version of that image, recalculate everything in 1:1, adjust the sharpening a little to fit the printing process, and you're done. Systemwide photo workflow I (Mike) will tell you, how I do it on Linux. After copying the RAW images to my harddrive, I preselect them with geeqie, which gives a very fast large preview of the embedded jpegs. My favourite file manager is nautilus, which gives a nice thumbnail view of my RAWs. It is very simple to call Photivo from there (either via context menu or via drag and drop). To keep my images organized I use digiKam, which is really a great manager with every feature I need. From there images are also send to Photivo via context menu or drag and drop. So editing is done in Photivo. If I could do everything in Photivo (no need for local corrections like clone or heal) I tag and rate the photo in Photvio ( Output tab) and save a websize jpeg. DigiKam reads tagging and rating and I'm done. Otherwise, I use the Gimp button and export to gimp, where I do the final touch ups and save from there. If I want to print an image (which is not that often the case) I proceed like described above.","tags":"UsingPhotivo","url":"pages/Manual/UsingPhotivo/WorkFlow.html"},{"title":"Camiel Bouchier","text":"I love programming. I did it since I was a teenager. I wrote non-trivial stuff in assemblers, Basic, Pascal, C, C++, Perl, Python and Javascript.","tags":"pages","url":"pages/camiel-bouchier.html"},{"title":"X3F support available.","text":"X3F support based upon Kalpanika x3f tools is now available and first results look promising. Be aware though that loading a X3F file goes with a denoising step and that makes the loading considerably slower than other formats. Subsequent processing though is not impacted. Unluckily it also adds a huge dependency, i.e. the opencv library. Moreover, the version 3.3 a 3.x version is needed which might need installation on your system. For Ubuntu it would go like this . If you want to avoid the dependency (and you do not need X3F) you can use the PT_WITH_X3F = False setting during the build process. On the other hand, once having pulled in opencv, a number of additional algorithms (or alternative implementations) come in reach. Current Windows download has X3F support built in. The Linux packages not yet.","tags":"Announcement","url":"posts/20180322/X3FAndOpenCV.html"},{"title":"Linux packages and cmake available.","text":"Sergey 'salsergey' made available a number of Photivo packages for several Linux distributions : openSUSE, Fedora, Ubuntu, Arch. The packages and installation instructions can be found here . During that process he made also a CMake environment that seems to be fully operational by now (2018-03-20). Big thanks ! Please let us know if these packages work for you.","tags":"Announcement","url":"posts/20180320/LinuxAndCMakeAvailable.html"}]}